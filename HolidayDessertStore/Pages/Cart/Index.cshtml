@page
@model HolidayDessertStore.Pages.Cart.IndexModel
@{
    ViewData["Title"] = "Shopping Cart";
}
@*
This code snippet is a Razor template for displaying a shopping cart.

If the cart is not empty, it displays a table with the following columns:

Item (with image and name)

Price

Available quantity

Quantity in cart (with a dropdown to update)

Total cost

Remove button

Below the table, it displays the total cost of all items in the cart and two buttons: 
"Continue Shopping" and "Proceed to Checkout".

If the cart is empty, it displays a message saying "Your cart is empty" and a "Continue Shopping" button.
*@
<div class="container">
    <h2>Shopping Cart</h2>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.CartItems.Any())
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Price</th>
                        <th>Available</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td>
                                <img src="@item.Dessert.ImagePath" alt="@item.Dessert.Name" style="width: 50px; height: 50px; object-fit: cover;" class="me-2">
                                @item.Dessert.Name
                            </td>
                            <td>$@item.Price.ToString("F2")</td>
                            <td>@item.Dessert.Quantity</td>
                            <td>
                                <form method="post" asp-page-handler="UpdateQuantity" asp-route-id="@item.Id" class="d-flex align-items-center">
                                    <select name="quantity" class="form-select form-select-sm" style="width: auto;" onchange="this.form.submit()">
                                        @for (int i = 1; i <= Math.Min(item.Dessert.Quantity, 10); i++)
                                        {
                                            <option value="@i" selected="@(i == item.Quantity)">@i</option>
                                        }
                                    </select>
                                </form>
                            </td>
                            <td>$@((item.Price * item.Quantity).ToString("F2"))</td>
                            <td>
                                <form method="post" asp-page-handler="Remove" asp-route-id="@item.Id" class="d-inline">
                                    <button type="submit" class="btn btn-danger btn-sm">Remove</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4" class="text-end"><strong>Total:</strong></td>
                        <td><strong>$@Model.CartTotal.ToString("F2")</strong></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="d-flex justify-content-between">
            <a href="/DessertShop" class="btn btn-secondary">Continue Shopping</a>
            <form method="post" asp-page-handler="Checkout">
                <button type="submit" class="btn btn-primary">Proceed to Checkout</button>
            </form>
        </div>
    }
    else
    {
        <div class="text-center my-5">
            <h3>Your cart is empty</h3>
            <a href="/DessertShop" class="btn btn-primary mt-3">Continue Shopping</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Auto-hide alert after 3 seconds
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                var alert = document.querySelector('.alert');
                if (alert) {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }
            }, 3000);
        });
    </script>
}
